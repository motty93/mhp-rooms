version: '3.8'

services:
  # Webアプリケーション
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://mhp_user:mhp_password@db:5432/mhp_rooms_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      # 開発時のホットリロード用（オプション）
      - ./static:/app/static
      - ./templates:/app/templates
    networks:
      - mhp-network

  # PostgreSQLデータベース
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mhp_rooms_dev
      POSTGRES_USER: mhp_user
      POSTGRES_PASSWORD: mhp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mhp_user -d mhp_rooms_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mhp-network

  # Redis（キャッシュ・セッション管理用）
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - mhp-network

  # pgAdmin（データベース管理UI）
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mhp-rooms.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - mhp-network

volumes:
  postgres_data:
  redis_data:

networks:
  mhp-network:
    driver: bridge