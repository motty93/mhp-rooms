{{ define "head" }}
  <meta
    name="description"
    content="HuntersHub（ハンターズハブ）のプロフィール設定。ゲームIDを登録してパーティ募集を始めよう。"
  />
  <meta
    name="keywords"
    content="プロフィール設定,PSN ID,Nintendo ID,Friend Code,HuntersHub,ハンターズハブ,モンハン,アドホック"
  />
  <meta property="og:title" content="プロフィール設定 - HuntersHub" />
  <meta
    property="og:description"
    content="ゲームIDを登録してプロフィールを完成させましょう。"
  />
{{ end }}

{{ define "page" }}
  <div
    class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8"
    x-data="completeProfile()"
  >
    <div class="max-w-md w-full space-y-8">
      <!-- ヘッダー -->
      <div class="text-center">
        <img
          src="/static/images/icon.webp"
          alt="アドパHub"
          class="w-16 h-16 mx-auto mb-4"
        />
        <h2 class="text-3xl font-bold text-gray-900 mb-2">
          もう少しで完了です！
        </h2>
        <p class="text-gray-600">
          PSN IDを登録してプロフィールを完成させましょう
        </p>
      </div>

      <!-- 進捗インジケーター -->
      <div class="flex items-center justify-center space-x-2 mb-8">
        <div class="flex items-center">
          <div
            class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center"
          >
            <svg
              class="w-5 h-5 text-white"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                clip-rule="evenodd"
              ></path>
            </svg>
          </div>
          <span class="ml-2 text-sm text-gray-600">アカウント作成</span>
        </div>
        <div class="w-16 h-0.5 bg-gray-300"></div>
        <div class="flex items-center">
          <div
            class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center"
          >
            <span class="text-white text-sm font-bold">2</span>
          </div>
          <span class="ml-2 text-sm font-medium text-gray-900"
            >プロフィール設定</span
          >
        </div>
      </div>

      <!-- エラーメッセージ -->
      <div
        x-show="errorMessage"
        x-transition
        class="bg-red-50 border border-red-200 rounded-lg p-4"
        style="display: none;"
      >
        <div class="flex">
          <svg
            class="w-5 h-5 text-red-400 mr-2 mt-0.5 flex-shrink-0"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
              clip-rule="evenodd"
            ></path>
          </svg>
          <div>
            <p class="text-sm text-red-700" x-text="errorMessage"></p>
          </div>
        </div>
      </div>

      <!-- 成功メッセージ -->
      <div
        x-show="successMessage"
        x-transition
        class="bg-green-50 border border-green-200 rounded-lg p-4"
        style="display: none;"
      >
        <div class="flex">
          <svg
            class="w-5 h-5 text-green-400 mr-2 mt-0.5 flex-shrink-0"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
              clip-rule="evenodd"
            ></path>
          </svg>
          <div>
            <p class="text-sm text-green-700" x-text="successMessage"></p>
          </div>
        </div>
      </div>

      <!-- プロフィール補完フォーム -->
      <form
        @submit.prevent="handleSubmit"
        class="space-y-6 bg-white p-6 rounded-lg shadow"
      >
        <!-- ユーザー情報表示 -->
        <div class="bg-gray-50 rounded-lg p-4 mb-6">
          <div class="flex items-center">
            <img
              x-show="userInfo.avatarUrl"
              :src="userInfo.avatarUrl"
              alt="プロフィール画像"
              class="w-12 h-12 rounded-full mr-3"
            />
            <div>
              <p
                class="font-medium text-gray-900"
                x-text="userInfo.displayName"
              ></p>
              <p class="text-sm text-gray-500" x-text="userInfo.email"></p>
            </div>
          </div>
        </div>

        <!-- PSN ID -->
        <div>
          <label
            for="psnId"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            Sony PSN ID <span class="text-red-500">*</span>
          </label>
          <input
            id="psnId"
            type="text"
            x-model="form.psnId"
            @blur="validatePsnId"
            required
            autofocus
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
            :class="{'border-red-300 focus:ring-red-500': fieldError}"
            placeholder="あなたのPSN ID"
          />
          <p
            x-show="fieldError"
            x-text="errorText"
            class="mt-1 text-sm text-red-600"
            style="display: none;"
          ></p>
          <p class="mt-1 text-xs text-gray-500">
            PlayStation NetworkのIDを入力してください（3〜16文字）
          </p>
        </div>

        <!-- なぜPSN IDが必要か -->
        <div class="bg-blue-50 rounded-lg p-4">
          <h3 class="text-sm font-medium text-blue-900 mb-2">
            なぜPSN IDが必要？
          </h3>
          <ul class="text-xs text-blue-700 space-y-1">
            <li>• 他のプレイヤーがあなたを識別できるようにするため</li>
            <li>• ゲーム内でのフレンド追加を簡単にするため</li>
            <li>• アドホックパーティでの円滑なコミュニケーションのため</li>
          </ul>
        </div>

        <!-- ボタン -->
        <div class="flex space-x-3">
          <button
            type="submit"
            :disabled="isLoading || fieldError"
            class="flex-1 py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            <span x-show="!isLoading">プロフィールを完成させる</span>
            <span x-show="isLoading" class="flex items-center justify-center">
              <svg
                class="animate-spin -ml-1 mr-2 h-4 w-4 text-white"
                fill="none"
                viewBox="0 0 24 24"
              >
                <circle
                  class="opacity-25"
                  cx="12"
                  cy="12"
                  r="10"
                  stroke="currentColor"
                  stroke-width="4"
                ></circle>
                <path
                  class="opacity-75"
                  fill="currentColor"
                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                ></path>
              </svg>
              保存中...
            </span>
          </button>

          <button
            type="button"
            @click="handleSkip"
            class="px-4 py-3 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors"
          >
            後で設定
          </button>
        </div>
      </form>

      <!-- 注意事項 -->
      <p class="text-xs text-gray-500 text-center">
        PSN IDは後から変更することができます
      </p>
    </div>
  </div>

  <script>
    document.addEventListener('alpine:init', () => {
      Alpine.data('completeProfile', () => ({
        form: {
          psnId: '',
        },
        userInfo: {
          displayName: '',
          email: '',
          avatarUrl: '',
        },
        fieldError: false,
        errorText: '',
        errorMessage: '',
        successMessage: '',
        isLoading: false,
        init() {
          this.fetchUserInfo()
        },
        async fetchUserInfo() {
          try {
            const response = await fetch('/api/user/current', {
              method: 'GET',
              headers: {
                'Content-Type': 'application/json',
              },
              credentials: 'same-origin',
            })
            if (response.ok) {
              const data = await response.json()
              this.userInfo = {
                displayName: data.display_name || data.email.split('@')[0],
                email: data.email,
                avatarUrl: data.avatar_url || '',
              }
            }
          } catch (error) {
            console.error('Failed to fetch user info:', error)
          }
        },
        validatePsnId() {
          const value = this.form.psnId
          if (!value) {
            this.fieldError = true
            this.errorText = 'PSN IDを入力してください'
            return
          }
          if (value.length < 3) {
            this.fieldError = true
            this.errorText = 'PSN IDは3文字以上で入力してください'
            return
          }
          if (value.length > 16) {
            this.fieldError = true
            this.errorText = 'PSN IDは16文字以内で入力してください'
            return
          }
          if (!/^[a-zA-Z0-9_-]+$/.test(value)) {
            this.fieldError = true
            this.errorText =
              'PSN IDは英数字、ハイフン、アンダースコアのみ使用できます'
            return
          }
          this.fieldError = false
          this.errorText = ''
        },
        async handleSubmit() {
          this.errorMessage = ''
          this.successMessage = ''
          this.validatePsnId()
          if (this.fieldError) {
            return
          }
          this.isLoading = true
          try {
            const response = await fetch('/auth/complete-profile', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              credentials: 'same-origin',
              body: JSON.stringify(this.form),
            })
            const data = await response.json()
            if (response.ok) {
              this.successMessage = 'プロフィールが完成しました！'
              setTimeout(() => {
                window.location.href = data.redirectUrl || '/rooms'
              }, 1500)
            } else {
              this.errorMessage =
                data.message || 'プロフィールの更新に失敗しました'
            }
          } catch (error) {
            this.errorMessage = 'ネットワークエラーが発生しました'
          } finally {
            this.isLoading = false
          }
        },
        handleSkip() {
          if (
            confirm(
              'PSN IDを設定せずに続けますか？一部の機能が制限される場合があります。',
            )
          ) {
            window.location.href = '/rooms'
          }
        },
      }))
    })
  </script>
{{ end }}
