{{ define "head" }}
  <meta
    name="description"
    content="„É¢„É≥„Çπ„Çø„Éº„Éè„É≥„Çø„ÉºÈÉ®Â±ã‰∏ÄË¶ß - MonHubÔºà„É¢„É≥„Éè„ÉñÔºâ„ÄÇ„É¢„É≥„Éè„É≥„Éù„Éº„Çø„Éñ„É´„Ç∑„É™„Éº„Ç∫„ÅÆÂçîÂäõ„Éó„É¨„Ç§„É´„Éº„É†„ÇíÊ§úÁ¥¢„ÉªÂèÇÂä†„Åß„Åç„Åæ„Åô„ÄÇ"
  />
  <meta
    name="keywords"
    content="„É¢„É≥„Éè„É≥,ÈÉ®Â±ã‰∏ÄË¶ß,„É¢„É≥„Çπ„Çø„Éº„Éè„É≥„Çø„Éº,ÂçîÂäõ„Éó„É¨„Ç§,„Ç™„É≥„É©„Ç§„É≥,MonHub,„É¢„É≥„Éè„Éñ"
  />
  <meta property="og:title" content="ÈÉ®Â±ã‰∏ÄË¶ß - MonHub" />
  <meta
    property="og:description"
    content="„É¢„É≥„Çπ„Çø„Éº„Éè„É≥„Çø„Éº„ÅÆÈÉ®Â±ã‰∏ÄË¶ß„ÄÇ„É¢„É≥„Éè„É≥„Éù„Éº„Çø„Éñ„É´„Ç∑„É™„Éº„Ç∫„ÅÆÂçîÂäõ„Éó„É¨„Ç§„ÇíÊ•Ω„Åó„ÇÇ„ÅÜ"
  />
{{ end }}

{{ define "page" }}
  <div x-data="rooms()" x-init="checkPSNIdRequired()">
    <section class="bg-white py-8 border-b border-gray-200">
      <div class="container mx-auto px-4">
        <div class="hidden md:flex items-center justify-between">
          <div>
            <h1 class="text-3xl font-bold text-gray-800 mb-2">ÈÉ®Â±ã‰∏ÄË¶ß</h1>
            <p class="text-gray-600">„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™ÈÉ®Â±ã„ÇíÊé¢„Åù„ÅÜ</p>
          </div>

          <!-- Â§ß„Åç„ÅÑ„Éú„Çø„É≥Ôºà„Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóÁî®Ôºâ -->
          <button
            @click="$store.roomCreate.open()"
            x-show="$store.auth.initialized && $store.auth.isAuthenticated"
            x-cloak
            class="bg-gray-800 hover:bg-gray-900 text-white font-medium py-3 px-6 rounded-lg transition-colors whitespace-nowrap"
          >
            Êñ∞„Åó„ÅÑÈÉ®Â±ã„Çí‰Ωú„Çã
          </button>
          <button
            x-show="$store.auth.initialized && !$store.auth.isAuthenticated"
            x-cloak
            @click="$store.auth.handleUnauthenticatedAction()"
            title="„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô"
            class="bg-gray-400 text-gray-500 font-medium py-3 px-6 rounded-lg cursor-not-allowed whitespace-nowrap"
          >
            Êñ∞„Åó„ÅÑÈÉ®Â±ã„Çí‰Ωú„Çã
          </button>
        </div>

        <!-- „É¢„Éê„Ç§„É´Áî®„É¨„Ç§„Ç¢„Ç¶„Éà -->
        <div class="md:hidden">
          <div class="mb-4">
            <h1 class="text-2xl font-bold text-gray-800 mb-2">ÈÉ®Â±ã‰∏ÄË¶ß</h1>
            <p class="text-gray-600 text-sm">„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™ÈÉ®Â±ã„ÇíÊé¢„Åù„ÅÜ</p>
          </div>

          <div class="flex justify-center">
            <!-- ÈÉ®Â±ã‰ΩúÊàê„Éú„Çø„É≥ÔºàË™çË®ºÁä∂ÊÖã„ÅßÂàá„ÇäÊõø„ÅàÔºâ -->
            <!-- „É¢„Éê„Ç§„É´Áî®„Éú„Çø„É≥„ÅØÈùûË°®Á§∫ -->
            <div class="hidden"></div>
          </div>
        </div>
      </div>
    </section>

    <section class="bg-gray-50 py-6">
      <div class="container mx-auto px-4">
        <div class="flex flex-col items-start sm:flex-row sm:items-center mb-6">
          <span class="mb-2 sm:mb-0 sm:mr-4 text-gray-700 dark:text-gray-300"
            >„Ç≤„Éº„É†„ÅßÁµû„ÇäËæº„ÅøÔºö</span
          >
          <select
            id="game-version-select"
            name="game_version"
            class="w-full sm:w-48 px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-sm text-gray-900 dark:text-gray-100"
            @change="filterRooms($event.target.value)"
          >
            <option value="">„Åô„Åπ„Å¶„ÅÆ„Ç≤„Éº„É†</option>
            {{ range .PageData.GameVersions }}
              <option value="{{ .Code }}">{{ .Code }}</option>
            {{ end }}
          </select>
        </div>
        <div
          class="mt-4 text-sm text-gray-600"
          x-show="filteredRooms.length > 0"
          x-cloak
          aria-live="polite"
          aria-atomic="true"
        >
          <span x-text="filteredRooms.length"></span>‰ª∂„ÅÆÈÉ®Â±ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü
        </div>

        <!-- „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÊÉÖÂ†±Ë°®Á§∫ -->
        <div class="mt-4 text-sm text-gray-600">
          ÂÖ®{{ .PageData.Total }}‰ª∂‰∏≠
          {{ if gt .PageData.Total 0 }}
            {{ add (mul (sub .PageData.CurrentPage 1) .PageData.PerPage) 1 }}„Äú{{ min (mul .PageData.CurrentPage .PageData.PerPage) .PageData.Total }}‰ª∂
          {{ else }}
            0‰ª∂
          {{ end }}„ÇíË°®Á§∫
        </div>
      </div>
    </section>

    <section class="py-8 min-h-[calc(100vh-200px)] md:min-h-0">
      <div class="container mx-auto px-4" id="room-list-container">
        <div
          class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
          x-show="filteredRooms.length > 0"
          x-cloak
        >
          <template x-for="room in filteredRooms" :key="room.id">
            <div
              class="room-card bg-white rounded-lg shadow-md border flex flex-col h-full hover:shadow-lg transition-all"
              :class="room.isJoined ? 'border-blue-300 bg-blue-50' : 'border-gray-200'"
            >
              <div class="p-6 flex-grow">
                <div class="flex items-start justify-between mb-4">
                  <div class="flex items-center space-x-3 flex-1 min-w-0">
                    <div
                      :class="getGameIconClass(room.gameVersion.code)"
                      class="game-icon rounded flex-shrink-0"
                      :data-game="room.gameVersion.code"
                    ></div>
                    <div class="flex-1 min-w-0">
                      <h4
                        class="font-bold text-gray-800 truncate"
                        x-text="(room.hasPassword ? 'üîë ' : '') + (room.name.length > 20 ? room.name.substring(0, 20) + '...' : room.name)"
                        :title="room.name"
                      ></h4>
                    </div>
                  </div>

                  <div class="flex-shrink-0 ml-2">
                    <template x-if="room.isClosed">
                      <span
                        class="bg-gray-100 text-gray-800 text-sm px-2 py-1 rounded-full"
                        >closed</span
                      >
                    </template>
                    <template x-if="!room.isClosed">
                      <div class="flex items-center space-x-2">
                        <!-- ÂèÇÂä†‰∏≠„Éê„ÉÉ„Ç∏ -->
                        <template x-if="room.isJoined">
                          <span
                            class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full font-medium"
                          >
                            ÂèÇÂä†‰∏≠
                          </span>
                        </template>
                        <!-- ‰∫∫Êï∞Ë°®Á§∫ -->
                        <span
                          class="bg-green-100 text-green-800 text-sm px-2 py-1 rounded-full"
                          x-text="room.currentPlayers + '/' + room.maxPlayers"
                        ></span>
                      </div>
                    </template>
                  </div>
                </div>

                <template x-if="room.description">
                  <p
                    class="text-gray-600 text-sm mb-3"
                    x-text="room.description"
                  ></p>
                </template>

                <template
                  x-if="room.questType || (room.targetMonster && room.targetMonster !== '') || (room.rankRequirement && room.rankRequirement !== '')"
                >
                  <div class="text-xs text-gray-500 space-y-1">
                    <template x-if="room.questType">
                      <div x-text="'„Çø„Ç§„Éó: ' + room.questType"></div>
                    </template>
                    <template
                      x-if="room.targetMonster && room.targetMonster !== ''"
                    >
                      <div x-text="'„Çø„Éº„Ç≤„ÉÉ„Éà: ' + room.targetMonster"></div>
                    </template>
                    <template
                      x-if="room.rankRequirement && room.rankRequirement !== ''"
                    >
                      <div x-text="'„É©„É≥„ÇØ: ' + room.rankRequirement"></div>
                    </template>
                  </div>
                </template>
              </div>

              <div class="p-6 pt-0">
                <div class="flex items-center justify-between min-h-[40px]">
                  <span
                    class="text-sm text-gray-500"
                    x-text="'„Éõ„Çπ„Éà: ' + (room.host.displayName || room.host.username)"
                  ></span>

                  <!-- „Éú„Çø„É≥È†òÂüü - Âõ∫ÂÆöÈ´ò„Åï„ÇíÁ¢∫‰øù -->
                  <div class="h-[36px] flex items-center justify-end">
                    <!-- ÂèÇÂä†Ê∏à„Åø„ÅÆÈÉ®Â±ã„ÅÆÂ†¥Âêà -->
                    <template x-if="room.isJoined">
                      <button
                        @click="window.location.href = '/rooms/' + room.id"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm transition-colors h-full"
                      >
                        ÂÖ•ÂÆ§„Åô„Çã
                      </button>
                    </template>

                    <!-- ÂèÇÂä†ÂèØËÉΩ„Å™ÈÉ®Â±ã„ÅÆÂ†¥Âêà -->
                    <template
                      x-if="!room.isJoined && !room.isClosed && room.currentPlayers < room.maxPlayers"
                    >
                      <div class="h-full flex items-center">
                        <!-- Ë™çË®ºÊ∏à„Åø„É¶„Éº„Ç∂„ÉºÁî® -->
                        <button
                          x-show="$store.auth.initialized && $store.auth.isAuthenticated"
                          x-cloak
                          @click="openModal(room)"
                          :aria-label="'„Äå' + room.name + '„Äç„Å´ÂèÇÂä†'"
                          class="modal-button bg-gray-800 hover:bg-gray-900 text-white px-4 py-2 rounded text-sm transition-colors h-full"
                        >
                          ÂèÇÂä†
                        </button>

                        <!-- Êú™Ë™çË®º„É¶„Éº„Ç∂„ÉºÁî® -->
                        <button
                          x-show="$store.auth.initialized && !$store.auth.isAuthenticated"
                          x-cloak
                          @click="openLoginModal()"
                          class="modal-button bg-gray-800 hover:bg-gray-900 text-white px-4 py-2 rounded text-sm transition-colors h-full"
                        >
                          ÂèÇÂä†
                        </button>
                      </div>
                    </template>
                    <!-- ÂèÇÂä†‰∏çÂèØ„ÅÆÂ†¥Âêà -->
                    <template
                      x-if="!room.isJoined && (room.isClosed || room.currentPlayers >= room.maxPlayers)"
                    >
                      <button
                        disabled
                        class="bg-gray-400 text-white px-4 py-2 rounded text-sm cursor-not-allowed h-full"
                      >
                        ÂèÇÂä†‰∏çÂèØ
                      </button>
                    </template>
                  </div>
                </div>
              </div>
            </div>
          </template>
        </div>
        <!-- Á©∫„ÅÆÁä∂ÊÖã -->
        <div
          class="text-center py-16"
          x-show="filteredRooms.length === 0"
          x-cloak
        >
          <div class="text-gray-400 mb-4">
            <svg
              class="w-16 h-16 mx-auto mb-4"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                clip-rule="evenodd"
              />
            </svg>
          </div>

          <h3 class="text-lg font-medium text-gray-500 mb-2">
            <span
              x-show="activeFilter !== ''"
              x-text="activeFilter + '„ÅÆÈÉ®Â±ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì'"
            ></span>
            <span x-show="activeFilter === ''"
              >ÁèæÂú®„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™ÈÉ®Â±ã„Åå„ÅÇ„Çä„Åæ„Åõ„Çì</span
            >
          </h3>

          <p class="text-gray-400 mb-6">
            Êñ∞„Åó„ÅÑÈÉ®Â±ã„Çí‰Ωú„Å£„Å¶„ÄÅ„Éè„É≥„Çø„Éº„ÇíÂãüÈõÜ„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜÔºÅ
          </p>

          <!-- ÈÉ®Â±ã‰ΩúÊàê„Éú„Çø„É≥ÔºàË™çË®ºÁä∂ÊÖã„ÅßÂàá„ÇäÊõø„ÅàÔºâ -->
          <!-- „Ç§„É≥„É©„Ç§„É≥„Éú„Çø„É≥ÔºàÁ©∫„ÅÆÁä∂ÊÖãÁî®Ôºâ -->
          <button
            @click="$store.roomCreate.open()"
            x-show="$store.auth.initialized && $store.auth.isAuthenticated"
            x-cloak
            class="inline-flex items-center bg-gray-800 hover:bg-gray-900 text-white font-medium py-2 px-4 rounded-lg transition-colors"
          >
            ÈÉ®Â±ã„Çí‰Ωú„Çã
          </button>
          <button
            x-show="$store.auth.initialized && !$store.auth.isAuthenticated"
            x-cloak
            @click="$store.auth.handleUnauthenticatedAction()"
            title="„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô"
            class="inline-flex items-center bg-gray-400 text-gray-500 font-medium py-2 px-4 rounded-lg cursor-not-allowed"
          >
            ÈÉ®Â±ã„Çí‰Ωú„Çã
          </button>
        </div>

        <!-- „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ -->
        {{ if gt .PageData.TotalPages 1 }}
          <div class="mt-8 flex justify-center items-center gap-2">
            {{ $currentPage := .PageData.CurrentPage }}
            {{ $totalPages := .PageData.TotalPages }}
            {{ $filter := .PageData.Filter }}


            <!-- Ââç„ÅÆ„Éö„Éº„Ç∏„Éú„Çø„É≥ -->
            {{ if gt .PageData.CurrentPage 1 }}
              <a
                href="?page={{ sub .PageData.CurrentPage 1 }}{{ if .PageData.Filter }}
                  &game_version={{ .PageData.Filter }}
                {{ end }}"
                class="inline-flex items-center justify-center w-10 h-10 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                aria-label="Ââç„ÅÆ„Éö„Éº„Ç∏"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"
                  />
                </svg>
              </a>
            {{ else }}
              <span
                class="inline-flex items-center justify-center w-10 h-10 text-gray-400 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed"
                aria-label="Ââç„ÅÆ„Éö„Éº„Ç∏ÔºàÁÑ°ÂäπÔºâ"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"
                  />
                </svg>
              </span>
            {{ end }}


            <!-- „Éö„Éº„Ç∏Áï™Âè∑Ôºà„É¢„Éê„Ç§„É´ÔºöÁèæÂú®„Éö„Éº„Ç∏„ÅÆ„Åø„ÄÅ„Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóÔºöË§áÊï∞„Éö„Éº„Ç∏Ôºâ -->
            <div class="flex items-center gap-1">
              <!-- „É¢„Éê„Ç§„É´Ë°®Á§∫Ôºà768pxÊú™Ê∫ÄÔºâ -->
              <div class="flex md:hidden items-center gap-1">
                {{ range $page := sequence 1 $totalPages }}
                  {{ if eq $page $currentPage }}
                    <span
                      class="px-3 py-2 text-sm font-medium text-white bg-gray-800 border border-gray-800 rounded-md"
                    >
                      {{ $page }}
                    </span>
                  {{ else if or (eq $page (sub $currentPage 1)) (eq $page (add $currentPage 1)) }}
                    <a
                      href="?page={{ $page }}{{ if $filter }}
                        &game_version={{ $filter }}
                      {{ end }}"
                      class="px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                    >
                      {{ $page }}
                    </a>
                  {{ end }}
                {{ end }}
              </div>

              <!-- „Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóË°®Á§∫Ôºà768px‰ª•‰∏äÔºâ -->
              <div class="hidden md:flex items-center gap-1">
                {{ range $page := sequence 1 $totalPages }}
                  {{ if eq $page $currentPage }}
                    <span
                      class="px-4 py-2 text-sm font-medium text-white bg-gray-800 border border-gray-800 rounded-md"
                    >
                      {{ $page }}
                    </span>
                  {{ else if or (le $page 3) (ge $page (sub $totalPages 2)) (and (ge $page (sub $currentPage 1)) (le $page (add $currentPage 1))) }}
                    <a
                      href="?page={{ $page }}{{ if $filter }}
                        &game_version={{ $filter }}
                      {{ end }}"
                      class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                    >
                      {{ $page }}
                    </a>
                  {{ else if or (eq $page 4) (eq $page (sub $totalPages 3)) }}
                    <span class="px-2 text-gray-500">...</span>
                  {{ end }}
                {{ end }}
              </div>
            </div>

            <!-- Ê¨°„ÅÆ„Éö„Éº„Ç∏„Éú„Çø„É≥ -->
            {{ if lt .PageData.CurrentPage .PageData.TotalPages }}
              <a
                href="?page={{ add .PageData.CurrentPage 1 }}{{ if .PageData.Filter }}
                  &game_version={{ .PageData.Filter }}
                {{ end }}"
                class="inline-flex items-center justify-center w-10 h-10 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                aria-label="Ê¨°„ÅÆ„Éö„Éº„Ç∏"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </a>
            {{ else }}
              <span
                class="inline-flex items-center justify-center w-10 h-10 text-gray-400 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed"
                aria-label="Ê¨°„ÅÆ„Éö„Éº„Ç∏ÔºàÁÑ°ÂäπÔºâ"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </span>
            {{ end }}
          </div>
        {{ end }}
      </div>
    </section>

    <!-- ÈÉ®Â±ãÂèÇÂä†„É¢„Éº„ÉÄ„É´ -->
    <div
      x-show="showModal"
      x-cloak
      @click="closeModal()"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
    >
      <div
        @click.stop
        x-show="showModal"
        x-cloak
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="transform scale-95 opacity-0"
        x-transition:enter-end="transform scale-100 opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="transform scale-100 opacity-100"
        x-transition:leave-end="transform scale-95 opacity-0"
        role="dialog"
        aria-modal="true"
        aria-labelledby="modal-title"
        class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4"
      >
        <!-- „Éò„ÉÉ„ÉÄ„Éº -->
        <div class="px-6 py-4 border-b border-gray-200">
          <h3
            id="modal-title"
            class="text-xl font-bold text-gray-800"
            x-text="currentRoom.name"
          ></h3>
          <p
            class="text-gray-600 mt-2 text-sm"
            x-show="currentRoom.description"
            x-text="currentRoom.description"
          ></p>
          <span
            class="inline-block px-3 py-1 text-xs font-medium rounded-full mt-2 bg-gray-100 text-gray-700"
            x-text="currentRoom.gameVersionCode"
          ></span>
        </div>

        <!-- ÈÉ®Â±ãÊÉÖÂ†± -->
        <div class="px-6 py-4">
          <div class="space-y-3 text-sm">
            <div class="flex items-center justify-between">
              <span class="text-gray-500">ÈÉ®Â±ã‰∏ª</span>
              <span
                class="font-medium text-gray-800"
                x-text="currentRoom.hostName"
              ></span>
            </div>
            <div class="flex items-center justify-between">
              <span class="text-gray-500">ÂèÇÂä†‰∫∫Êï∞</span>
              <span
                class="font-medium text-gray-800"
                x-text="`${currentRoom.currentPlayers}/${currentRoom.maxPlayers}`"
              ></span>
            </div>
            <template
              x-if="currentRoom.targetMonster && currentRoom.targetMonster !== ''"
            >
              <div class="flex items-center justify-between">
                <span class="text-gray-500">„Çø„Éº„Ç≤„ÉÉ„Éà</span>
                <span
                  class="font-medium text-gray-800"
                  x-text="currentRoom.targetMonster"
                ></span>
              </div>
            </template>
            <template
              x-if="currentRoom.rankRequirement && currentRoom.rankRequirement !== ''"
            >
              <div class="flex items-center justify-between">
                <span class="text-gray-500">„É©„É≥„ÇØ</span>
                <span
                  class="font-medium text-gray-800"
                  x-text="currentRoom.rankRequirement"
                ></span>
              </div>
            </template>
            <div class="flex items-center justify-between">
              <span class="text-gray-500">„Éë„Çπ„ÉØ„Éº„Éâ</span>
              <span
                class="font-medium"
                :class="currentRoom.hasPassword ? 'text-red-600' : 'text-green-600'"
                x-text="currentRoom.hasPassword ? '„ÅÇ„Çä' : '„Å™„Åó'"
              ></span>
            </div>
          </div>

          <!-- „Éë„Çπ„ÉØ„Éº„ÉâÂÖ•ÂäõÔºàÂøÖË¶Å„Å™Â†¥Âêà„ÅÆ„ÅøÔºâ -->
          <div x-show="currentRoom.hasPassword" class="mt-4">
            <label class="block text-sm font-medium text-gray-700 mb-2">
              „Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
            </label>
            <input
              type="password"
              x-model="password"
              @keydown.enter="joinRoom()"
              placeholder="„Éë„Çπ„ÉØ„Éº„Éâ"
              autocomplete="new-password"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-800 focus:border-transparent"
            />
          </div>
        </div>

        <!-- „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ -->
        <div
          class="px-6 py-4 bg-gray-50 rounded-b-lg flex justify-end space-x-3 relative"
        >
          <button
            @click="closeModal()"
            class="modal-button px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors"
          >
            „Ç≠„É£„É≥„Çª„É´
          </button>
          <div class="relative">
            <button
              @click="joinRoom()"
              :disabled="isJoinDisabled"
              x-text="isJoining ? 'ÂèÇÂä†‰∏≠...' : 'ÂèÇÂä†„Åô„Çã'"
              class="modal-button px-6 py-2 bg-gray-800 hover:bg-gray-900 text-white font-medium rounded-lg transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed"
            ></button>

            <!-- „Ç®„É©„Éºtooltip -->
            <div
              x-show="showError"
              x-transition:enter="transition ease-out duration-200"
              x-transition:enter-start="opacity-0 transform scale-95"
              x-transition:enter-end="opacity-100 transform scale-100"
              x-transition:leave="transition ease-in duration-150"
              x-transition:leave-start="opacity-100 transform scale-100"
              x-transition:leave-end="opacity-0 transform scale-95"
              class="absolute bottom-full right-0 mb-2 px-3 py-2 bg-red-600 text-white text-sm rounded-lg shadow-lg whitespace-nowrap z-50 max-w-xs"
              x-cloak
            >
              <div x-text="errorMessage"></div>
              <!-- „ÉÑ„Éº„É´„ÉÅ„ÉÉ„Éó„ÅÆÁü¢Âç∞ -->
              <div
                class="absolute top-full right-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-red-600"
              ></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- „É≠„Ç∞„Ç§„É≥Ê°àÂÜÖ„É¢„Éº„ÉÄ„É´ -->
    <div
      x-show="showLoginModal"
      x-cloak
      @click.self="closeLoginModal()"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
    >
      <div
        x-show="showLoginModal"
        x-cloak
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="transform scale-95 opacity-0"
        x-transition:enter-end="transform scale-100 opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="transform scale-100 opacity-100"
        x-transition:leave-end="transform scale-95 opacity-0"
        class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4"
      >
        <!-- „Éò„ÉÉ„ÉÄ„Éº -->
        <div
          class="flex items-center justify-between p-6 border-b border-gray-200"
        >
          <h3 class="text-lg font-semibold text-gray-800">
            „É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô
          </h3>
          <button
            @click="closeLoginModal()"
            class="text-gray-400 hover:text-gray-600 text-xl font-bold"
          >
            √ó
          </button>
        </div>

        <!-- „Ç≥„É≥„ÉÜ„É≥„ÉÑ -->
        <div class="p-6 text-center">
          <div class="text-gray-600 mb-6">
            ÈÉ®Â±ã„Å´ÂèÇÂä†„Åô„Çã„Å´„ÅØ„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ<br />
            „É≠„Ç∞„Ç§„É≥„Åó„Å¶‰ªñ„ÅÆ„Éè„É≥„Çø„Éº„Å®‰∏ÄÁ∑í„Å´Áã©„Çä„ÇíÊ•Ω„Åó„Åø„Åæ„Åó„Çá„ÅÜÔºÅ
          </div>

          <div class="mb-6">
            <svg
              class="mx-auto h-16 w-16 text-gray-400"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
              />
            </svg>
          </div>
        </div>

        <!-- „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ -->
        <div
          class="px-6 py-4 bg-gray-50 rounded-b-lg flex justify-center space-x-3"
        >
          <button
            @click="closeLoginModal()"
            class="modal-button px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors"
          >
            „Ç≠„É£„É≥„Çª„É´
          </button>
          <a
            href="/auth/login"
            class="modal-button px-6 py-2 bg-gray-800 hover:bg-gray-900 text-white font-medium rounded-lg transition-colors"
          >
            „É≠„Ç∞„Ç§„É≥„Åô„Çã
          </a>
        </div>
      </div>
    </div>

    <!-- Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞ -->
    <div
      x-show="showConfirmDialog"
      x-cloak
      @click.self="closeConfirmDialog()"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
    >
      <div
        x-show="showConfirmDialog"
        x-cloak
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="transform scale-95 opacity-0"
        x-transition:enter-end="transform scale-100 opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="transform scale-100 opacity-100"
        x-transition:leave-end="transform scale-95 opacity-0"
        class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4"
      >
        <!-- „Éò„ÉÉ„ÉÄ„Éº -->
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 class="text-lg font-semibold text-gray-800">
            ‰ªñ„ÅÆÈÉ®Â±ã„Å´ÂèÇÂä†‰∏≠„Åß„Åô
          </h3>
        </div>

        <!-- „Ç≥„É≥„ÉÜ„É≥„ÉÑ -->
        <div class="p-6">
          <div class="text-gray-600 mb-4">
            Êó¢„Å´Âà•„ÅÆÈÉ®Â±ã„Å´ÂèÇÂä†„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ<br />
            Êñ∞„Åó„ÅÑÈÉ®Â±ã„Å´ÂèÇÂä†„Åô„Çã„Å®„ÄÅÁèæÂú®„ÅÆÈÉ®Â±ã„Åã„ÇâÈÄÄÂá∫„Åó„Åæ„Åô„ÄÇÁ∂öË°å„Åó„Åæ„Åô„ÅãÔºü
          </div>

          <div class="mb-4">
            <svg
              class="mx-auto h-12 w-12 text-yellow-400"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z"
              />
            </svg>
          </div>
        </div>

        <!-- „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ -->
        <div
          class="px-6 py-4 bg-gray-50 rounded-b-lg flex justify-end space-x-3"
        >
          <button
            @click="closeConfirmDialog()"
            class="modal-button px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors"
          >
            „Ç≠„É£„É≥„Çª„É´
          </button>
          <button
            @click="confirmJoinRoom()"
            :disabled="isJoining"
            x-text="isJoining ? 'ÈÄÄÂá∫„Åó„Å¶ÂèÇÂä†‰∏≠...' : 'ÈÄÄÂá∫„Åó„Å¶ÂèÇÂä†'"
            class="modal-button px-6 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed"
          ></button>
        </div>
      </div>
    </div>

    <!-- „Éñ„É≠„ÉÉ„ÇØË≠¶Âëä„ÉÄ„Ç§„Ç¢„É≠„Ç∞ -->
    <div
      x-show="showBlockWarningDialog"
      x-cloak
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
    >
      <div
        x-show="showBlockWarningDialog"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0 transform scale-90"
        x-transition:enter-end="opacity-100 transform scale-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100 transform scale-100"
        x-transition:leave-end="opacity-0 transform scale-90"
        class="bg-white rounded-lg shadow-xl max-w-md w-full mx-auto"
        @click.stop=""
      >
        <!-- „Éò„ÉÉ„ÉÄ„Éº -->
        <div class="p-6 border-b border-gray-200">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900">ÂèÇÂä†Á¢∫Ë™ç</h3>
            <button
              @click="closeBlockWarningDialog()"
              class="text-gray-400 hover:text-gray-600 transition-colors"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                ></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- „Ç≥„É≥„ÉÜ„É≥„ÉÑ -->
        <div class="p-6">
          <div class="text-gray-600 mb-4" x-text="blockWarningMessage"></div>

          <div class="mb-4">
            <svg
              class="mx-auto h-12 w-12 text-orange-400"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z"
              />
            </svg>
          </div>
        </div>

        <!-- „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ -->
        <div
          class="px-6 py-4 bg-gray-50 rounded-b-lg flex justify-end space-x-3"
        >
          <button
            @click="closeBlockWarningDialog()"
            class="modal-button px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors"
          >
            „Ç≠„É£„É≥„Çª„É´
          </button>
          <button
            @click="confirmJoinWithBlock()"
            :disabled="isJoining"
            x-text="isJoining ? 'ÂèÇÂä†‰∏≠...' : '„Åù„Çå„Åß„ÇÇÂèÇÂä†'"
            class="modal-button px-6 py-2 bg-orange-600 hover:bg-orange-700 text-white font-medium rounded-lg transition-colors disabled:bg-orange-400 disabled:cursor-not-allowed"
          ></button>
        </div>
      </div>
    </div>

    <!-- „Éï„É≠„Éº„ÉÜ„Ç£„É≥„Ç∞ÈÉ®Â±ã‰ΩúÊàê„Éú„Çø„É≥Ôºà„É¢„Éê„Ç§„É´Â∞ÇÁî®Ôºâ -->
    <!-- „Éï„É≠„Éº„ÉÜ„Ç£„É≥„Ç∞„Éú„Çø„É≥Ôºà„É¢„Éê„Ç§„É´Áî®Âè≥‰∏ãÂõ∫ÂÆöÔºâ -->
    <div class="fixed bottom-6 right-6 z-40 md:hidden">
      <button
        @click="$store.roomCreate.open()"
        x-show="$store.auth.initialized && $store.auth.isAuthenticated"
        x-cloak
        class="flex items-center justify-center w-14 h-14 bg-gray-800 hover:bg-gray-900 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105"
        title="ÈÉ®Â±ã„Çí‰Ωú„Çã"
        aria-label="Êñ∞„Åó„ÅÑÈÉ®Â±ã„Çí‰ΩúÊàê"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 4v16m8-8H4"
          />
        </svg>
      </button>
      <button
        x-show="$store.auth.initialized && !$store.auth.isAuthenticated"
        x-cloak
        @click="$store.auth.handleUnauthenticatedAction()"
        title="„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô"
        aria-label="ÈÉ®Â±ã„Çí‰Ωú„Çã„Å´„ÅØ„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô"
        class="flex items-center justify-center w-14 h-14 bg-gray-400 text-gray-500 rounded-full shadow-lg cursor-not-allowed"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 4v16m8-8H4"
          />
        </svg>
      </button>
    </div>

    <!-- „Éõ„Çπ„Éà‰∏≠Âà∂Èôê„É¢„Éº„ÉÄ„É´ -->
    <div
      x-show="showHostRestrictionModal"
      x-cloak
      @click.self="() => { showHostRestrictionModal = false; hostRoomInfo = null; }"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"
    >
      <div
        x-show="showHostRestrictionModal"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="transform scale-95 opacity-0"
        x-transition:enter-end="transform scale-100 opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="transform scale-100 opacity-100"
        x-transition:leave-end="transform scale-95 opacity-0"
        class="bg-white rounded-lg shadow-xl max-w-md w-full"
        @click.stop
      >
        <!-- „Éò„ÉÉ„ÉÄ„Éº -->
        <div class="p-6 border-b border-gray-200">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900">
              ‰ªñ„ÅÆÈÉ®Â±ã„Å´ÂèÇÂä†„Åß„Åç„Åæ„Åõ„Çì
            </h3>
            <button
              @click="() => { showHostRestrictionModal = false; hostRoomInfo = null; }"
              class="text-gray-400 hover:text-gray-600 transition-colors"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                ></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- „Ç≥„É≥„ÉÜ„É≥„ÉÑ -->
        <div class="p-6">
          <div class="text-gray-600 mb-4">
            <p>„Éõ„Çπ„Éà‰∏≠„ÅØ‰ªñ„ÅÆÈÉ®Â±ã„Å´ÂèÇÂä†„Åß„Åç„Åæ„Åõ„Çì„ÄÇ</p>
          </div>

          <div class="mb-4">
            <svg
              class="mx-auto h-12 w-12 text-orange-400"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
              />
            </svg>
          </div>
        </div>

        <!-- „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ -->
        <div
          class="px-6 py-4 bg-gray-50 rounded-b-lg flex justify-end space-x-3"
        >
          <button
            @click="() => { showHostRestrictionModal = false; hostRoomInfo = null; }"
            class="px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors"
          >
            Èñâ„Åò„Çã
          </button>
          <a
            :href="'/rooms/' + hostRoomInfo?.id"
            class="px-6 py-2 bg-gray-800 hover:bg-gray-900 text-white font-medium rounded-lg transition-colors"
          >
            „Éõ„Çπ„Éà‰∏≠„ÅÆÈÉ®Â±ã„Å∏ÁßªÂãï
          </a>
        </div>
      </div>
    </div>
    <!-- ÈÉ®Â±ã‰ΩúÊàê„É¢„Éº„ÉÄ„É´„ÅØ„Ç∞„É≠„Éº„Éê„É´„É¢„Éº„ÉÄ„É´„Å´ÁßªÂãïÊ∏à„Åø -->
    <!-- „Éõ„Çπ„Éà‰∏≠Ë≠¶Âëä„É¢„Éº„ÉÄ„É´„Å®„Ç≤„Çπ„ÉàÁ¢∫Ë™ç„É¢„Éº„ÉÄ„É´„ÇÇ„Ç∞„É≠„Éº„Éê„É´„É¢„Éº„ÉÄ„É´„Å´ÁßªÂãïÊ∏à„Åø -->
  </div>

<script>
  document.addEventListener('alpine:init', () => {
    function rooms() {
      return {
        showModal: false,
        showLoginModal: false,
        currentRoom: {},
        password: '',
        isJoining: false,
        showError: false,
        errorMessage: '',
        allRooms: [],
        filteredRooms: [],
        activeFilter: '',
        lastFocusedElement: null,
        showConfirmDialog: false,
        confirmRoomId: null,
        showBlockWarningDialog: false,
        blockWarningMessage: '',
        showHostRestrictionModal: false,
        hostRoomInfo: null,
        async checkPSNIdRequired() {
          try {
            const authStore = Alpine.store('auth');
            // Êó¢„Å´ÂàùÊúüÂåñÊ∏à„Åø„ÅÆÂ†¥Âêà„ÅØ„ÄÅÂÜçÂ∫¶checkAuth()„ÇíÂëº„Å∞„Å™„ÅÑ
            if (!authStore.initialized) {
              return; // „Åæ„Å†ÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØ‰Ωï„ÇÇ„Åó„Å™„ÅÑ
            }
            if (authStore.needsPSNId) {
              console.log('PSN ID„ÅåÊú™Ë®≠ÂÆö„Åß„Åô„ÄÇ„Éó„É≠„Éï„Ç£„Éº„É´Ë®≠ÂÆöÁîªÈù¢„Å∏„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„Åó„Åæ„Åô„ÄÇ');
              window.location.href = '/auth/complete-profile';
            }
          } catch (error) {
            console.error('PSN ID„ÉÅ„Çß„ÉÉ„ÇØ„Ç®„É©„Éº:', error);
          }
        },
        // ÂàùÊúüÂåñÂá¶ÁêÜ
        init() {
          // „Çµ„Éº„Éê„Éº„Çµ„Ç§„Éâ„É¨„É≥„ÉÄ„É™„É≥„Ç∞„ÅÆ„Éá„Éº„Çø„Çí‰ΩøÁî®
          const roomsData = {{.PageData.Rooms | json}};
          this.allRooms = (roomsData || []).map(room => ({
            id: room.id,
            name: room.name,
            description: room.description || '',
            gameVersion: {
              code: room.game_version?.code || '',
              name: room.game_version?.name || ''
            },
            host: {
              username: room.host?.username || '',
              displayName: room.host?.display_name || ''
            },
            currentPlayers: room.current_players || 0,
            maxPlayers: room.max_players || 4,
            isClosed: room.is_closed || false,
            hasPassword: room.password_hash ? true : false,
            targetMonster: room.target_monster === '<nil>' || !room.target_monster ? '' : room.target_monster,
            rankRequirement: room.rank_requirement === '<nil>' || !room.rank_requirement ? '' : room.rank_requirement,
            isJoined: room.is_joined || false
          }));
          // „Éá„Éê„ÉÉ„Ç∞: ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã„ÅÆÂèÇÂä†Áä∂ÊÖã„ÇíÁ¢∫Ë™ç
          const shoshinsha = this.allRooms.find(r => r.name === 'ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã');
          if (shoshinsha) {
            console.log('ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã:', shoshinsha.name, 'isJoined:', shoshinsha.isJoined, 'raw is_joined:', roomsData.find(r => r.name === 'ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã')?.is_joined);
          }
          // URL„Éë„É©„É°„Éº„Çø„Åã„ÇâÂàùÊúü„Éï„Ç£„É´„Çø„ÇíË®≠ÂÆö
          const urlParams = new URLSearchParams(window.location.search);
          const gameVersionFilter = urlParams.get('game_version') || '';
          this.activeFilter = gameVersionFilter;
          // „Çµ„Éº„Éê„ÉºÂÅ¥„Åß„Éï„Ç£„É´„Çø„É™„É≥„Ç∞Ê∏à„Åø„ÅÆ„Åü„ÇÅ„ÄÅ„Åù„ÅÆ„Åæ„ÅæË°®Á§∫
          this.filteredRooms = this.allRooms;

          // „Çª„É¨„ÇØ„Éà„Éú„ÉÉ„ÇØ„Çπ„ÅÆÂÄ§„ÇíË®≠ÂÆö
          this.$nextTick(() => {
            const selectElement = document.getElementById('game-version-select');
            if (selectElement) {
              selectElement.value = gameVersionFilter;
            }
          });
          // „Ç§„Éô„É≥„Éà„É™„Çπ„Éä„ÉºË®≠ÂÆö
          document.addEventListener('keydown', this.handleEsc.bind(this));

          // Ë™çË®ºÁä∂ÊÖã„ÅÆÂ§âÂåñ„ÇíÁõ£Ë¶ñ
          this.watchAuthState();
        },

        // Ë™çË®ºÁä∂ÊÖãÁõ£Ë¶ñ
        watchAuthState() {
          let lastAuthState = null;

          const checkAuthChange = () => {
            const authStore = Alpine.store('auth');
            if (!authStore) return;

            const currentAuthState = {
              initialized: authStore.initialized,
              isAuthenticated: authStore.isAuthenticated,
              userId: authStore.user?.id
            };

            // ÂàùÂõû„ÉÅ„Çß„ÉÉ„ÇØÊôÇ„ÅØË®òÈå≤„ÅÆ„Åø
            if (lastAuthState === null) {
              lastAuthState = currentAuthState;
              return;
            }

            // Ë™çË®ºÁä∂ÊÖã„ÅåÂ§âÂåñ„Åó„ÅüÂ†¥ÂêàÔºàÊú™Ë™çË®º‚ÜíË™çË®ºÊ∏à„Åø„ÄÅ„Åæ„Åü„ÅØ„É¶„Éº„Ç∂„Éº„ÅåÂ§âÊõ¥Ôºâ
            if (currentAuthState.initialized &&
                currentAuthState.isAuthenticated &&
                (!lastAuthState.isAuthenticated || lastAuthState.userId !== currentAuthState.userId)) {
              console.log('Ë™çË®ºÁä∂ÊÖãÂ§âÂåñ„ÇíÊ§úÂá∫„ÄÅÈÉ®Â±ã„Éá„Éº„Çø„ÇíÂÜçÂèñÂæó„Åó„Åæ„Åô');
              this.refreshRoomData();
            }

            lastAuthState = currentAuthState;
          };

          // ÂÆöÊúüÁöÑ„Å´„ÉÅ„Çß„ÉÉ„ÇØÔºàË™çË®ºÂÆå‰∫Ü„ÇíÊ§úÂá∫„Åô„Çã„Åü„ÇÅÔºâ
          const authWatcher = setInterval(checkAuthChange, 1000);

          // 5ÂàÜÂæå„Å´„Ç¶„Ç©„ÉÉ„ÉÅ„É£„Éº„ÇíÂÅúÊ≠¢Ôºà„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÈÖçÊÖÆÔºâ
          setTimeout(() => {
            clearInterval(authWatcher);
          }, 300000);
        },

        // ÈÉ®Â±ã„Éá„Éº„ÇøÂÜçÂèñÂæó
        async refreshRoomData() {
          try {
            const authStore = Alpine.store('auth');
            if (!authStore.isAuthenticated || !authStore.session?.access_token) {
              console.log('Ë™çË®º„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„Åü„ÇÅ„ÄÅÈÉ®Â±ã„Éá„Éº„ÇøÂÜçÂèñÂæó„Çí„Çπ„Ç≠„ÉÉ„Éó');
              return;
            }

            const response = await fetch('/api/rooms', {
              method: 'GET',
              headers: {
                'Authorization': `Bearer ${authStore.session.access_token}`,
                'Content-Type': 'application/json'
              }
            });

            if (!response.ok) {
              console.error('ÈÉ®Â±ã„Éá„Éº„ÇøÂèñÂæó„Ç®„É©„Éº:', response.status);
              return;
            }

            const data = await response.json();

            // ÈÉ®Â±ã„Éá„Éº„Çø„ÇíÊõ¥Êñ∞
            this.allRooms = (data.rooms || []).map(room => ({
              id: room.id,
              name: room.name,
              description: room.description || '',
              gameVersion: {
                code: room.game_version?.code || '',
                name: room.game_version?.name || ''
              },
              host: {
                username: room.host?.username || '',
                displayName: room.host?.display_name || ''
              },
              currentPlayers: room.current_players || 0,
              maxPlayers: room.max_players || 4,
              isClosed: room.is_closed || false,
              hasPassword: room.has_password || false,
              targetMonster: room.target_monster === '<nil>' || !room.target_monster ? '' : room.target_monster,
            rankRequirement: room.rank_requirement === '<nil>' || !room.rank_requirement ? '' : room.rank_requirement,
              isJoined: room.is_joined || false
            }));

            // „Çµ„Éº„Éê„ÉºÂÅ¥„Åß„Éï„Ç£„É´„Çø„É™„É≥„Ç∞Ê∏à„Åø„ÅÆ„Åü„ÇÅ„ÄÅ„Åù„ÅÆ„Åæ„ÅæË°®Á§∫
            this.filteredRooms = this.allRooms;

            console.log('ÈÉ®Â±ã„Éá„Éº„ÇøÂÜçÂèñÂæóÂÆå‰∫Ü');

            // „Éá„Éê„ÉÉ„Ç∞: ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã„ÅÆÂèÇÂä†Áä∂ÊÖã„ÇíÁ¢∫Ë™ç
            const shoshinsha = this.allRooms.find(r => r.name === 'ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã');
            if (shoshinsha) {
              console.log('ÂÜçÂèñÂæóÂæå - ÂàùÂøÉËÄÖÊ≠ìËøéÈÉ®Â±ã:', shoshinsha.name, 'isJoined:', shoshinsha.isJoined);
            }

          } catch (error) {
            console.error('ÈÉ®Â±ã„Éá„Éº„ÇøÂÜçÂèñÂæó„Ç®„É©„Éº:', error);
          }
        },
        // „Éï„Ç£„É´„Çø„É™„É≥„Ç∞Ê©üËÉΩÔºà„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÂØæÂøúÔºâ
        filterRooms(gameVersion) {
          this.activeFilter = gameVersion;
          // „Éï„Ç£„É´„ÇøÂ§âÊõ¥ÊôÇ„ÅØ„Çµ„Éº„Éê„ÉºÂÅ¥„Åß„Éï„Ç£„É´„Çø„É™„É≥„Ç∞„ÇíË°å„ÅÜ„Åü„ÇÅ„ÄÅ„Éö„Éº„Ç∏„Çí„É™„É≠„Éº„Éâ
          const url = new URL(window.location);
          if (gameVersion) {
            url.searchParams.set('game_version', gameVersion);
          } else {
            url.searchParams.delete('game_version');
          }
          // „Éö„Éº„Ç∏Áï™Âè∑„Çí„É™„Çª„ÉÉ„Éà
          url.searchParams.delete('page');
          window.location.href = url.toString();
        },
        // ÂèÇÂä†„Éú„Çø„É≥„ÅÆÊúâÂäπ/ÁÑ°ÂäπÂà§ÂÆö
        get isJoinDisabled() {
          return this.isJoining || (this.currentRoom.hasPassword && !this.password.trim())
        },
        // ÈÉ®Â±ãÂèÇÂä†„É¢„Éº„ÉÄ„É´„ÇíÈñã„Åè
        async openModal(room) {
          // „Éõ„Çπ„ÉàÁä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
          const authStore = Alpine.store('auth');
          if (authStore.isAuthenticated && authStore.session?.access_token) {
            try {
              const response = await fetch('/api/user/current/room-status', {
                headers: {
                  'Authorization': `Bearer ${authStore.session.access_token}`
                }
              });

              if (response.ok) {
                const data = await response.json();
                if (data.status === 'HOST') {
                  // „Éõ„Çπ„Éà‰∏≠„ÅÆÂ†¥Âêà„ÅØÂà∂Èôê„É¢„Éº„ÉÄ„É´„ÇíË°®Á§∫
                  this.hostRoomInfo = data.room;
                  this.showHostRestrictionModal = true;
                  return;
                }
              }
            } catch (error) {
              console.error('ÈÉ®Â±ãÁä∂ÊÖã„ÉÅ„Çß„ÉÉ„ÇØ„Ç®„É©„Éº:', error);
              // „Ç®„É©„Éº„ÅÆÂ†¥Âêà„ÅØÈÄöÂ∏∏ÈÄö„ÇäÁ∂öË°å
            }
          }

          // ÁèæÂú®„ÅÆ„Éï„Ç©„Éº„Ç´„Çπ‰ΩçÁΩÆ„Çí‰øùÂ≠ò
          this.lastFocusedElement = document.activeElement;
          this.currentRoom = {
            id: room.id,
            name: room.name,
            description: room.description,
            gameVersionCode: room.gameVersion.code,
            gameVersionName: room.gameVersion.name,
            hostName: room.host.displayName || room.host.username,
            currentPlayers: room.currentPlayers,
            maxPlayers: room.maxPlayers,
            hasPassword: room.hasPassword,
            targetMonster: room.targetMonster,
            rankRequirement: room.rankRequirement
          };
          this.password = ''
          this.isJoining = false
          this.showModal = true
          // „Éï„Ç©„Éº„Ç´„ÇπÁÆ°ÁêÜ
          this.$nextTick(() => {
            const modal = this.$el.querySelector('[role="dialog"]')
            if (modal) {
              // „Éï„Ç©„Éº„Ç´„Çπ„Çí„É¢„Éº„ÉÄ„É´ÂÜÖ„Å´„Éà„É©„ÉÉ„Éó
              const focusableElements = modal.querySelectorAll('button, input, a');
              if (room.hasPassword) {
                const passwordInput = modal.querySelector("input[type='password']")
                if (passwordInput) passwordInput.focus()
              } else if (focusableElements.length > 0) {
                focusableElements[focusableElements.length - 1].focus() // ÂèÇÂä†„Éú„Çø„É≥„Å´„Éï„Ç©„Éº„Ç´„Çπ
              }
            }
          })
        },
        closeModal() {
          this.showModal = false
          // „Éà„É©„É≥„Ç∏„Ç∑„Éß„É≥ÂÆå‰∫ÜÂæå„Å´„Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢
          setTimeout(() => {
            this.currentRoom = {}
            this.password = ''
            this.isJoining = false
            this.showError = false
            this.errorMessage = ''
          }, 300) // „Éà„É©„É≥„Ç∏„Ç∑„Éß„É≥ÊôÇÈñì„Å®Âêå„Åò
          // „Éï„Ç©„Éº„Ç´„Çπ„ÇíÂÖÉ„ÅÆË¶ÅÁ¥†„Å´Êàª„Åô
          if (this.lastFocusedElement) {
            this.lastFocusedElement.focus()
            this.lastFocusedElement = null
          }
        },
        openLoginModal() {
          this.showLoginModal = true
        },
        closeLoginModal() {
          this.showLoginModal = false
        },
        async joinRoom() {
          if (this.isJoinDisabled) return

          // Ë™çË®ºÁä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
          if (!Alpine.store('auth').isAuthenticated) {
            this.closeModal()
            this.openLoginModal()
            return
          }

          this.isJoining = true
          const requestData = {}
          if (this.currentRoom.hasPassword) {
            requestData.password = this.password
          }
          try {
            // Ë™çË®º„Éò„ÉÉ„ÉÄ„Éº„ÇíÊ∫ñÂÇô
            const headers = {
              'Content-Type': 'application/json'
            }

            if (Alpine.store('auth').session?.access_token) {
              headers['Authorization'] = `Bearer ${Alpine.store('auth').session.access_token}`
            }

            const response = await fetch(`/rooms/${this.currentRoom.id}/join`, {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(requestData),
            })
            if (!response.ok) {
              if (response.status === 401) {
                throw new Error('Ë™çË®º„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ„É≠„Ç∞„Ç§„É≥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
              } else if (response.status === 409) {
                const errorData = await response.json()
                // „Éõ„Çπ„Éà‰∏≠„ÅÆÂà∂Èôê
                if (errorData.error === 'HOST_CANNOT_JOIN') {
                  this.closeModal()
                  this.hostRoomInfo = errorData.room
                  this.showHostRestrictionModal = true
                  this.isJoining = false
                  return
                }
                // ‰ªñ„ÅÆÈÉ®Â±ã„Å´ÂèÇÂä†„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅÆÁ¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞
                if (errorData.error === 'OTHER_ROOM_ACTIVE') {
                  this.closeModal()
                  this.showConfirmDialog = true
                  this.confirmRoomId = this.currentRoom.id
                  this.isJoining = false
                  return
                }
                // Êó¢„Å´Âêå„ÅòÈÉ®Â±ã„Å´ÂèÇÂä†„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà
                if (errorData.redirect) {
                  window.location.href = errorData.redirect
                  this.isJoining = false
                  return
                }
                throw new Error(errorData.message || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
              } else if (response.status === 403) {
                // „Éñ„É≠„ÉÉ„ÇØÈñ¢‰øÇ„Å´„Çà„ÇãÂèÇÂä†ÊãíÂê¶
                const errorData = await response.json()
                if (errorData.error === 'BLOCKED_BY_HOST') {
                  this.showErrorMessage('„Åì„ÅÆ„É´„Éº„É†„Å´„ÅØÂèÇÂä†„Åß„Åç„Åæ„Åõ„Çì')
                } else if (errorData.error === 'BLOCKED_BY_MEMBER') {
                  this.showErrorMessage('„Éñ„É≠„ÉÉ„ÇØÈñ¢‰øÇ„Å´„Çà„ÇäÂèÇÂä†„Åß„Åç„Åæ„Åõ„Çì')
                } else {
                  this.showErrorMessage(errorData.message || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
                }
                this.isJoining = false
                return
              } else if (response.status === 400) {
                const errorData = await response.text()
                throw new Error(errorData || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
              }
              throw new Error('ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
            }

            const result = await response.json()

            // „Éñ„É≠„ÉÉ„ÇØË≠¶Âëä„ÅÆÂ†¥Âêà
            if (result.warning === 'USER_BLOCKING_HOST' && result.requiresConfirmation) {
              this.showBlockWarningDialog = true
              this.blockWarningMessage = result.message
              this.isJoining = false
              return
            }

            // ÊàêÂäüÊôÇ„ÅØÈÉ®Â±ãË©≥Á¥∞ÁîªÈù¢„Å´ÈÅ∑ÁßªÔºà„É¢„Éº„ÉÄ„É´„ÅØÈñâ„Åò„Å™„ÅÑÔºâ
            if (result.redirect) {
              window.location.href = result.redirect
            } else {
              window.location.reload()
            }
          } catch (error) {
            this.showErrorMessage(error.message || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ')
            this.isJoining = false
            if (this.currentRoom.hasPassword) {
              this.password = ''
              this.$nextTick(() => {
                const passwordInput = this.$el.querySelector("input[type='password']")
                if (passwordInput) passwordInput.focus()
              })
            }
          }
        },
        // Esc„Ç≠„Éº„Åß„É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„Çã
        handleEsc(event) {
          if (event.key === 'Escape' && this.showModal) {
            this.closeModal()
          }
        },
        // „Ç≤„Éº„É†„Ç¢„Ç§„Ç≥„É≥„ÇØ„É©„Çπ„ÇíÂÆâÂÖ®„Å´ÂèñÂæó
        getGameIconClass(code) {
          const validCodes = ['mhp', 'mhp2', 'mhp2g', 'mhp3', 'mhxx'];
          const lowerCode = code.toLowerCase();
          if (validCodes.includes(lowerCode)) {
            return lowerCode + '-icon';
          }
          return 'default-icon';
        },
        // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏Ë°®Á§∫ÔºàtooltipÂΩ¢ÂºèÔºâ
        showErrorMessage(message) {
          this.errorMessage = message
          this.showError = true

          // 3ÁßíÂæå„Å´Ëá™Âãï„ÅßÈùûË°®Á§∫
          setTimeout(() => {
            this.showError = false
            this.errorMessage = ''
          }, 3000)
        },
        // Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Çã
        closeConfirmDialog() {
          this.showConfirmDialog = false
          this.confirmRoomId = null
          this.isJoining = false
          // ÂèÇÂä†„É¢„Éº„ÉÄ„É´„ÇÇ‰∏ÄÁ∑í„Å´Èñâ„Åò„Çã
          this.closeModal()
        },

        // Âº∑Âà∂ÁöÑ„Å´ÈÄÄÂá∫„Åó„Å¶ÂèÇÂä†
        async confirmJoinRoom() {
          if (!this.confirmRoomId) return

          this.isJoining = true
          let hasLeft = false // ÈÄÄÂá∫Âá¶ÁêÜ„ÅåÂÆüË°å„Åï„Çå„Åü„Åã„ÇíËøΩË∑°

          try {
            const authToken = Alpine.store('auth').session?.access_token
            const requestData = {}
            if (this.currentRoom.hasPassword) {
              requestData.password = this.password
            }

            // Êñ∞„Åó„ÅÑ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Çí‰ΩøÁî®„Åó„Å¶„ÄÅÈÄÄÂá∫„Å®ÂèÇÂä†„Çí‰∏ÄÂ∫¶„Å´Âá¶ÁêÜ
            requestData.forceJoin = true // Âº∑Âà∂ÂèÇÂä†„Éï„É©„Ç∞„ÇíËøΩÂä†

            const joinResponse = await fetch(`/rooms/${this.confirmRoomId}/join`, {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${authToken}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(requestData)
            })

            if (!joinResponse.ok) {
              const errorText = await joinResponse.text()

              // „Éë„Çπ„ÉØ„Éº„Éâ„Ç®„É©„Éº„ÅÆÂ†¥Âêà
              if (joinResponse.status === 400 && errorText.includes('„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÈñìÈÅï„Å£„Å¶„ÅÑ„Åæ„Åô')) {
                throw new Error('„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÈñìÈÅï„Å£„Å¶„ÅÑ„Åæ„Åô')
              }

              throw new Error(errorText || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
            }

            const result = await joinResponse.json()

            // „É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„Å¶ÈÉ®Â±ãË©≥Á¥∞„Å´ÈÅ∑Áßª
            this.closeConfirmDialog()
            this.closeModal()

            if (result.redirect) {
              window.location.href = result.redirect
            } else {
              window.location.reload()
            }

          } catch (error) {
            console.error('Âá¶ÁêÜ„Ç®„É©„Éº:', error)

            // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÅ©Âàá„Å´Ë°®Á§∫
            let errorMessage = error.message || 'Âá¶ÁêÜ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ'

            // „Éë„Çπ„ÉØ„Éº„Éâ„Ç®„É©„Éº„ÅÆÂ†¥Âêà„ÅØ„ÄÅ„Éë„Çπ„ÉØ„Éº„ÉâÂÖ•ÂäõÊ¨Ñ„Çí„ÇØ„É™„Ç¢„Åó„Å¶„Éï„Ç©„Éº„Ç´„Çπ
            if (errorMessage.includes('„Éë„Çπ„ÉØ„Éº„Éâ„ÅåÈñìÈÅï„Å£„Å¶„ÅÑ„Åæ„Åô')) {
              this.password = ''
              // Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Å¶„ÄÅÈÄöÂ∏∏„ÅÆÂèÇÂä†„É¢„Éº„ÉÄ„É´„Å´Êàª„Çã
              this.closeConfirmDialog()
              this.$nextTick(() => {
                const passwordInput = this.$el.querySelector("input[type='password']")
                if (passwordInput) passwordInput.focus()
              })
            }

            this.showErrorMessage(errorMessage)
            this.isJoining = false
          }
        },

        // „Éñ„É≠„ÉÉ„ÇØË≠¶Âëä„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Çã
        closeBlockWarningDialog() {
          this.showBlockWarningDialog = false
          this.blockWarningMessage = ''
          this.isJoining = false
        },

        // „Éñ„É≠„ÉÉ„ÇØË≠¶Âëä„Çí‰∫ÜÊâø„Åó„Å¶ÂèÇÂä†
        async confirmJoinWithBlock() {
          this.isJoining = true
          const requestData = {}
          if (this.currentRoom.hasPassword) {
            requestData.password = this.password
          }
          requestData.confirmJoin = true // „Éñ„É≠„ÉÉ„ÇØË≠¶ÂëäÁ¢∫Ë™çÊ∏à„Åø„Éï„É©„Ç∞

          try {
            const headers = {
              'Content-Type': 'application/json'
            }

            if (Alpine.store('auth').session?.access_token) {
              headers['Authorization'] = `Bearer ${Alpine.store('auth').session.access_token}`
            }

            const response = await fetch(`/rooms/${this.currentRoom.id}/join`, {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(requestData),
            })

            if (!response.ok) {
              if (response.status === 403) {
                const errorData = await response.json()
                this.showErrorMessage(errorData.message || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
                this.closeBlockWarningDialog()
                return
              }
              throw new Error('ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
            }

            const result = await response.json()

            // „ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Å¶ÈÉ®Â±ãË©≥Á¥∞„Å´ÈÅ∑Áßª
            this.closeBlockWarningDialog()
            this.closeModal()

            if (result.redirect) {
              window.location.href = result.redirect
            } else {
              window.location.reload()
            }
          } catch (error) {
            this.showErrorMessage(error.message || 'ÂèÇÂä†„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ')
            this.isJoining = false
          }
        },

        // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÂá¶ÁêÜ
        destroy() {
          document.removeEventListener('keydown', this.handleEsc.bind(this))
        },
      }
    }
    Alpine.data('rooms', rooms)
  })

</script>
{{ end }}
