{{ define "head" }}
  <meta
    name="description"
    content="HuntersHub（ハンターズハブ）に新規登録。メールアドレスまたはGoogleアカウントでモンハンパーティ募集を始めよう。無料で簡単登録。"
  />
  <meta
    name="keywords"
    content="新規登録,アカウント作成,HuntersHub,ハンターズハブ,モンハン,アドホック,Googleログイン,無料"
  />
  <meta property="og:title" content="新規登録 - HuntersHub" />
  <meta
    property="og:description"
    content="HuntersHubに新規登録してモンハンパーティ募集を楽しもう。完全無料でご利用いただけます。"
  />
{{ end }}

{{ define "page" }}
  <div
    class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8"
    x-data="registerPage()"
    x-init="checkAuthAndRedirect()"
  >
    <div class="max-w-md w-full space-y-8">
      <!-- ヘッダー -->
      <div class="text-center">
        <img
          src="/static/images/icon.webp"
          alt="アドパHub"
          class="w-16 h-16 mx-auto mb-4"
        />
        <h2 class="text-3xl font-bold text-gray-900 mb-2">新規登録</h2>
        <p class="text-gray-600">アカウントを作成して仲間を見つけよう</p>
      </div>

      <!-- エラーメッセージ -->
      <div
        x-show="errorMessage"
        x-transition
        class="bg-red-50 border border-red-200 rounded-lg p-4"
        style="display: none;"
      >
        <div class="flex">
          <svg
            class="w-5 h-5 text-red-400 mr-2 mt-0.5 flex-shrink-0"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
              clip-rule="evenodd"
            ></path>
          </svg>
          <div>
            <p class="text-sm text-red-700" x-text="errorMessage"></p>
          </div>
        </div>
      </div>

      <!-- 登録フォーム -->
      <form @submit.prevent="handleRegister" class="space-y-6">
        <!-- メールアドレス -->
        <div>
          <label
            for="email"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            メールアドレス <span class="text-red-500">*</span>
          </label>
          <input
            id="email"
            type="email"
            x-model="form.email"
            @blur="validateField('email')"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-colors"
            :class="{'border-red-300 focus:ring-red-500': fieldErrors.email}"
            placeholder="your@example.com"
          />
          <p
            x-show="fieldErrors.email"
            x-text="fieldErrorMessages.email"
            class="mt-1 text-sm text-red-600"
            style="display: none;"
          ></p>
        </div>

        <!-- パスワード -->
        <div>
          <label
            for="password"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            パスワード <span class="text-red-500">*</span>
          </label>
          <input
            id="password"
            type="password"
            x-model="form.password"
            @blur="validateField('password')"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-colors"
            :class="{'border-red-300 focus:ring-red-500': fieldErrors.password}"
            placeholder="6文字以上のパスワード"
          />
          <p
            x-show="fieldErrors.password"
            x-text="fieldErrorMessages.password"
            class="mt-1 text-sm text-red-600"
            style="display: none;"
          ></p>
        </div>

        <!-- PSN ID -->
        <div>
          <label
            for="psnId"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            Sony PSN ID <span class="text-red-500">*</span>
          </label>
          <input
            id="psnId"
            type="text"
            x-model="form.psnId"
            @blur="validateField('psnId')"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-colors"
            :class="{'border-red-300 focus:ring-red-500': fieldErrors.psnId}"
            placeholder="あなたのPSN ID"
          />
          <p
            x-show="fieldErrors.psnId"
            x-text="fieldErrorMessages.psnId"
            class="mt-1 text-sm text-red-600"
            style="display: none;"
          ></p>
          <p class="mt-1 text-xs text-gray-500">
            PlayStation NetworkのIDを入力してください
          </p>
        </div>

        <!-- 利用規約 -->
        <div class="flex items-start">
          <input
            id="terms"
            type="checkbox"
            x-model="form.agreeTerms"
            @change="validateField('agreeTerms')"
            required
            class="h-4 w-4 text-gray-600 focus:ring-gray-500 border-gray-300 rounded mt-1"
          />
          <label for="terms" class="ml-2 block text-sm text-gray-700">
            <a
              href="/terms"
              target="_blank"
              class="text-blue-600 hover:underline"
              >利用規約</a
            >
            および
            <a
              href="/privacy"
              target="_blank"
              class="text-blue-600 hover:underline"
              >プライバシーポリシー</a
            >
            に同意します <span class="text-red-500">*</span>
          </label>
        </div>
        <p
          x-show="fieldErrors.agreeTerms"
          x-text="fieldErrorMessages.agreeTerms"
          class="text-sm text-red-600"
          style="display: none;"
        ></p>

        <!-- 登録ボタン -->
        <button
          type="submit"
          :disabled="isLoading"
          class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        >
          <span x-show="!isLoading">アカウントを作成</span>
          <span x-show="isLoading" class="flex items-center">
            <svg
              class="animate-spin -ml-1 mr-2 h-4 w-4 text-white"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"
              ></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
            登録中...
          </span>
        </button>
      </form>

      <!-- 区切り線 -->
      <div class="relative my-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-gray-300"></div>
        </div>
        <div class="relative flex justify-center text-sm">
          <span class="px-2 bg-gray-50 text-gray-500">または</span>
        </div>
      </div>

      <!-- Googleで登録 -->
      <button
        @click="handleGoogleRegister"
        class="w-full flex justify-center items-center py-3 px-4 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors"
      >
        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24">
          <path
            fill="#4285F4"
            d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
          />
          <path
            fill="#34A853"
            d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
          />
          <path
            fill="#FBBC05"
            d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
          />
          <path
            fill="#EA4335"
            d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
          />
        </svg>
        Googleで登録
      </button>

      <!-- Google認証の説明 -->
      <p class="text-xs text-gray-500 text-center">
        Googleで登録した場合、自動的にログイン状態が保持されます
      </p>

      <!-- ログインへのリンク -->
      <div class="text-center">
        <p class="text-sm text-gray-600">
          すでにアカウントをお持ちの方は
          <a
            href="/auth/login"
            class="font-medium text-gray-800 hover:text-gray-900 underline"
          >
            ログイン
          </a>
        </p>
      </div>
    </div>
  </div>

  <script>
    function registerPage() {
      return {
        form: {
          email: '',
          password: '',
          psnId: '',
          agreeTerms: false,
        },
        fieldErrors: {
          email: false,
          password: false,
          psnId: false,
          agreeTerms: false,
        },
        fieldErrorMessages: {
          email: '',
          password: '',
          psnId: '',
          agreeTerms: '',
        },
        errorMessage: '',
        isLoading: false,

        async checkAuthAndRedirect() {
          try {
            const authStore = Alpine.store('auth')
            await authStore.checkAuth()

            if (authStore.isAuthenticated) {
              window.location.href = '/rooms'
            }
          } catch (error) {
            console.error('認証状態確認エラー:', error)
          }
        },

        validateField(fieldName) {
          this.fieldErrors[fieldName] = false
          this.fieldErrorMessages[fieldName] = ''

          if (fieldName === 'email') {
            if (!this.form.email) {
              this.fieldErrors.email = true
              this.fieldErrorMessages.email = 'メールアドレスを入力してください'
            } else if (!this.isValidEmail(this.form.email)) {
              this.fieldErrors.email = true
              this.fieldErrorMessages.email =
                '有効なメールアドレスを入力してください'
            }
          }

          if (fieldName === 'password') {
            if (!this.form.password) {
              this.fieldErrors.password = true
              this.fieldErrorMessages.password = 'パスワードを入力してください'
            } else if (this.form.password.length < 6) {
              this.fieldErrors.password = true
              this.fieldErrorMessages.password =
                'パスワードは6文字以上で入力してください'
            }
          }

          if (fieldName === 'psnId') {
            if (!this.form.psnId) {
              this.fieldErrors.psnId = true
              this.fieldErrorMessages.psnId = 'PSN IDを入力してください'
            } else if (this.form.psnId.length < 3) {
              this.fieldErrors.psnId = true
              this.fieldErrorMessages.psnId =
                'PSN IDは3文字以上で入力してください'
            }
          }

          if (fieldName === 'agreeTerms') {
            if (!this.form.agreeTerms) {
              this.fieldErrors.agreeTerms = true
              this.fieldErrorMessages.agreeTerms =
                '利用規約とプライバシーポリシーに同意してください'
            }
          }
        },

        isValidEmail(email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
          return emailRegex.test(email)
        },

        async handleRegister() {
          this.errorMessage = ''

          // 全フィールドをバリデーション
          Object.keys(this.form).forEach((fieldName) => {
            this.validateField(fieldName)
          })

          if (Object.values(this.fieldErrors).some((error) => error)) {
            return
          }

          this.isLoading = true

          try {
            // Supabaseでサインアップ
            const metadata = {
              psn_id: this.form.psnId,
            }

            const data = await Alpine.store('auth').signUp(
              this.form.email,
              this.form.password,
              metadata,
            )

            // 登録成功
            if (data.user && !data.session) {
              // メール確認が必要な場合
              alert(
                '確認メールを送信しました。メールを確認してアカウントを有効化してください。',
              )
              window.location.href = '/auth/login'
            } else if (data.session) {
              // すぐにログイン状態になった場合
              window.location.href = '/rooms'
            }
          } catch (error) {
            console.error('登録エラー:', error)

            // エラーメッセージの設定
            if (error.message.includes('already registered')) {
              this.errorMessage = 'このメールアドレスは既に登録されています'
            } else if (error.message.includes('weak password')) {
              this.errorMessage =
                'パスワードが弱すぎます。より強力なパスワードを設定してください'
            } else {
              this.errorMessage = error.message || '登録に失敗しました'
            }
          } finally {
            this.isLoading = false
          }
        },

        async handleGoogleRegister() {
          try {
            await Alpine.store('auth').signInWithGoogle()
          } catch (error) {
            console.error('Google登録エラー:', error)
            this.errorMessage = error.message || 'Google登録に失敗しました'
          }
        },
      }
    }
  </script>
{{ end }}
