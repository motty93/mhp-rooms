{{ define "head" }}
  <meta
    name="description"
    content="パスワードを忘れた方へ - アドパHub（アドパハブ）でパスワードをリセットしてください。メールアドレスを入力して簡単にパスワードを再設定できます。"
  />
  <meta
    name="keywords"
    content="パスワードリセット,パスワード忘れた,パスワード再設定,アドパHub,アドパハブ,ログイン"
  />
  <meta property="og:title" content="パスワードリセット - アドパHub" />
  <meta
    property="og:description"
    content="パスワードを忘れた方向けのリセット機能。メールアドレスを入力してパスワードを再設定できます。"
  />
{{ end }}

{{ define "page" }}
  <div
    class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8"
    x-data="passwordResetPage()"
  >
    <div class="max-w-md w-full space-y-8">
      <!-- ヘッダー -->
      <div class="text-center">
        <img
          src="/static/images/icon.webp"
          alt="アドパHub"
          class="w-16 h-16 mx-auto mb-4"
        />
        <h2 class="text-3xl font-bold text-gray-900 mb-2">
          パスワードリセット
        </h2>
        <p class="text-gray-600">登録したメールアドレスを入力してください</p>
      </div>

      <!-- 成功メッセージ -->
      <div
        x-show="successMessage"
        x-cloak
        x-transition
        class="bg-green-50 border border-green-200 rounded-lg p-4"
      >
        <div class="flex">
          <svg
            class="w-5 h-5 text-green-400 mr-2 mt-0.5 flex-shrink-0"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
              clip-rule="evenodd"
            ></path>
          </svg>
          <div>
            <p class="text-sm text-green-700" x-text="successMessage"></p>
          </div>
        </div>
      </div>

      <!-- エラーメッセージ -->
      <div
        x-show="errorMessage"
        x-cloak
        x-transition
        class="bg-red-50 border border-red-200 rounded-lg p-4"
      >
        <div class="flex">
          <svg
            class="w-5 h-5 text-red-400 mr-2 mt-0.5 flex-shrink-0"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
              clip-rule="evenodd"
            ></path>
          </svg>
          <div>
            <p class="text-sm text-red-700" x-text="errorMessage"></p>
          </div>
        </div>
      </div>

      <!-- リセットフォーム -->
      <form
        @submit.prevent="handlePasswordReset"
        x-show="!successMessage"
        class="space-y-6"
      >
        <!-- メールアドレス -->
        <div>
          <label
            for="email"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            メールアドレス <span class="text-red-500">*</span>
          </label>
          <input
            id="email"
            type="email"
            x-model="form.email"
            @blur="validateField('email')"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-colors"
            :class="{'border-red-300 focus:ring-red-500': fieldErrors.email}"
            placeholder="your@example.com"
          />
          <p
            x-show="fieldErrors.email"
            x-text="fieldErrorMessages.email"
            class="mt-1 text-sm text-red-600"
            style="display: none;"
          ></p>
        </div>

        <!-- 送信ボタン -->
        <button
          type="submit"
          :disabled="isLoading"
          class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        >
          <span x-show="!isLoading">リセットメールを送信</span>
          <span x-show="isLoading" class="flex items-center">
            <svg
              class="animate-spin -ml-1 mr-2 h-4 w-4 text-white"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"
              ></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
            送信中...
          </span>
        </button>
      </form>

      <!-- ナビゲーションリンク -->
      <div class="text-center space-y-4">
        <div class="text-sm text-gray-600">
          パスワードを思い出しましたか？
          <a
            href="/auth/login"
            class="font-medium text-gray-800 hover:text-gray-900 underline"
          >
            ログインする
          </a>
        </div>

        <div class="text-sm text-gray-600">
          アカウントをお持ちでない方は
          <a
            href="/auth/register"
            class="font-medium text-gray-800 hover:text-gray-900 underline"
          >
            新規登録
          </a>
        </div>
      </div>
    </div>
  </div>

  <script>
    function passwordResetPage() {
      return {
        // フォームデータ
        form: {
          email: '',
        },

        // エラー管理
        fieldErrors: {
          email: false,
        },
        fieldErrorMessages: {
          email: '',
        },
        errorMessage: '',
        successMessage: '',
        isLoading: false,

        // フィールドバリデーション
        validateField(fieldName) {
          this.fieldErrors[fieldName] = false
          this.fieldErrorMessages[fieldName] = ''

          if (fieldName === 'email') {
            if (!this.form.email) {
              this.fieldErrors.email = true
              this.fieldErrorMessages.email = 'メールアドレスを入力してください'
            } else if (!this.isValidEmail(this.form.email)) {
              this.fieldErrors.email = true
              this.fieldErrorMessages.email =
                '有効なメールアドレスを入力してください'
            }
          }
        },

        // メールアドレスバリデーション
        isValidEmail(email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
          return emailRegex.test(email)
        },

        // パスワードリセット処理
        async handlePasswordReset() {
          this.errorMessage = ''
          this.successMessage = ''

          // バリデーション
          this.validateField('email')

          if (this.fieldErrors.email) {
            return
          }

          this.isLoading = true

          try {
            const response = await fetch('/auth/password-reset', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(this.form),
            })

            const data = await response.json()

            if (response.ok) {
              this.successMessage =
                data.message ||
                'パスワードリセットメールを送信しました。メールをご確認ください。'
              this.form.email = ''
            } else {
              this.errorMessage = data.message || 'リセットに失敗しました'
            }
          } catch (error) {
            this.errorMessage = 'ネットワークエラーが発生しました'
          } finally {
            this.isLoading = false
          }
        },
      }
    }
  </script>
{{ end }}
