substitutions:
  _SERVICE_NAME: monhub
  _SSE_SERVICE_NAME: monhub-sse
  _REGION: asia-northeast1
  _ARTIFACT_REPOSITORY: monhub-registry
  _IMAGE_NAME: monhub-app
  _JOB_NAME: ogp-renderer                # ← 追加: Cloud Run Job 名
  _JOB_IMAGE_NAME: ogp-renderer          # ← 追加: Job 用イメージ名
  _GO_VERSION: "1.24"
  _DEPLOY_SSE: "false"                   # true に設定するとSSEサービスもデプロイ
  _DEPLOY_JOB: "true"                    # ← 追加: Job をデプロイするか
  _OG_BUCKET: monhub-master  # ← 追加: OGP保存先バケット
  _OG_PREFIX: prod                       # ← 追加: OGP保存先の環境プレフィックス (dev/stg/prod)
  # Secret Manager 上のシークレット名（環境ごとに合わせて変更）
  _SECRET_DATABASE_URL: DATABASE_URL__prod

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: UNSPECIFIED

steps:
  # 1) Build App
  - name: "gcr.io/cloud-builders/docker"
    id: "build-image"
    args:
      - "build"
      - "-t"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA'
      - "-t"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}:latest'
      - "-f"
      - "Dockerfile"
      - "--build-arg"
      - "GO_VERSION=${_GO_VERSION}"
      - "."

  # 2) Push App
  - name: "gcr.io/cloud-builders/docker"
    id: "push-image"
    args:
      - "push"
      - "--all-tags"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}'
    waitFor: ["build-image"]

  # 3) Build Job (ogp-renderer)
  #    Job 用 Dockerfile は例として cmd/ogp-renderer/Dockerfile に配置
  - name: "gcr.io/cloud-builders/docker"
    id: "build-job-image"
    args:
      - "build"
      - "-t"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_JOB_IMAGE_NAME}:$SHORT_SHA'
      - "-t"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_JOB_IMAGE_NAME}:latest'
      - "-f"
      - "cmd/ogp-renderer/Dockerfile"
      - "--build-arg"
      - "GO_VERSION=${_GO_VERSION}"
      - "."
    waitFor: ["build-image"]

  # 4) Push Job
  - name: "gcr.io/cloud-builders/docker"
    id: "push-job-image"
    args:
      - "push"
      - "--all-tags"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_JOB_IMAGE_NAME}'
    waitFor: ["build-job-image"]

  # 5) Deploy Main (Cloud Run)
  - name: "gcr.io/cloud-builders/gcloud"
    id: "deploy-main"
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--image"
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA'
      - "--region"
      - "${_REGION}"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--ingress"
      - "all"
      - "--port"
      - "8080"
      - "--timeout"
      - "3600"
      - "--memory"
      - "512Mi"
      - "--cpu"
      - "1"
      - "--max-instances"
      - "10"
      - "--min-instances"
      - "0"
      - "--concurrency"
      - "10"
      - "--set-secrets"
      - "DATABASE_URL=${_SECRET_DATABASE_URL}:latest"
      - "--update-env-vars"
      - "SERVICE_MODE=main,OG_BUCKET=${_OG_BUCKET},OG_PREFIX=${_OG_PREFIX},OGP_JOB_NAME=${_JOB_NAME},OGP_GENERATION_MODE=cloud"
    waitFor: ["push-image"]

  # 6) Deploy SSE (optional)
  - name: "gcr.io/cloud-builders/gcloud"
    id: "deploy-sse"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if [ "${_DEPLOY_SSE}" = "true" ]; then
          echo "SSEサービスをデプロイしています..."
          gcloud run deploy ${_SSE_SERVICE_NAME} \
            --image ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA \
            --region ${_REGION} \
            --platform managed \
            --allow-unauthenticated \
            --ingress all \
            --port 8080 \
            --timeout 3600 \
            --memory 256Mi \
            --cpu 1 \
            --max-instances 5 \
            --min-instances 0 \
            --concurrency 100 \
            --set-secrets DATABASE_URL=${_SECRET_DATABASE_URL}:latest \
            --update-env-vars "SERVICE_MODE=sse,OG_BUCKET=${_OG_BUCKET},OG_PREFIX=${_OG_PREFIX},OGP_JOB_NAME=${_JOB_NAME},OGP_GENERATION_MODE=cloud"
        else
          echo "SSEサービスのデプロイはスキップされました (_DEPLOY_SSE=${_DEPLOY_SSE})"
        fi
    waitFor: ["push-image"]

  # 7) Deploy Job (Cloud Run Jobs, optional)
  - name: "gcr.io/cloud-builders/gcloud"
    id: "deploy-job"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if [ "${_DEPLOY_JOB}" = "true" ]; then
          echo "Cloud Run Job をデプロイしています..."
          gcloud run jobs deploy ${_JOB_NAME} \
            --image ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_JOB_IMAGE_NAME}:$SHORT_SHA \
            --region ${_REGION} \
            --tasks 1 \
            --max-retries 2 \
            --set-secrets DATABASE_URL=${_SECRET_DATABASE_URL}:latest \
            --set-env-vars OG_BUCKET=${_OG_BUCKET},OG_PREFIX=${_OG_PREFIX}
        else
          echo "Job のデプロイはスキップされました (_DEPLOY_JOB=${_DEPLOY_JOB})"
        fi
    waitFor: ["push-job-image"]

artifacts:
  images:
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA'
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_IMAGE_NAME}:latest'
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_JOB_IMAGE_NAME}:$SHORT_SHA'
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPOSITORY}/${_JOB_IMAGE_NAME}:latest'
timeout: "1800s"
